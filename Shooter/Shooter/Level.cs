using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;

namespace Shooter
{
    public class Level
    {
        //This will be the engine that brings all of the componants together
        //Create instances of all of the other classes here
        //Personally, I would create this class last or next to last.
        private Main game;

        //This is an instance of our player
        public Player player;
        public Camera Camera { get; set; }

        //Here's the array to hold the background layers
        public BackgroundLayer[] backgroundLayers;

        //Finally, a level instance
        public Level(Main game)
        {
            //Pass the Main in
            this.game = game;

            //create an instance of the player
            player = new Player(game);

            //Set the backgroun up with the array and load in the content
            backgroundLayers = new BackgroundLayer[4];
            backgroundLayers[0] = new BackgroundLayer() // call that autogenerated empty constructor in BackgroundLayer
            {
                Texture = game.Content.Load<Texture2D>("_background/Layer1"),
                ScrollingSpeed = 0.25f,
                OffsetX = 300
            };
            backgroundLayers[1] = new BackgroundLayer() // call that autogenerated empty constructor in BackgroundLayer
            {
                Texture = game.Content.Load<Texture2D>("_background/Layer2"),
                ScrollingSpeed = 0.5f,
                OffsetX = 700
            };
            backgroundLayers[2] = new BackgroundLayer() // call that autogenerated empty constructor in BackgroundLayer
            {
                Texture = game.Content.Load<Texture2D>("_background/Layer3"),
                ScrollingSpeed = 0.75f,
                OffsetX = 800
            };
            backgroundLayers[3] = new BackgroundLayer() // call that autogenerated empty constructor in BackgroundLayer
            {
                Texture = game.Content.Load<Texture2D>("_background/Layer9"),
                ScrollingSpeed = 1f,
                OffsetX = 900
            };

            //Create an instance of Camera
            Camera = new Camera(this);
        }

        //Use a method to call the other Updates in the other classes
        public void Update(GameTime gametime)
        {
            player.Update(gametime);
            Camera.Update(gametime);
        }

        //And finally, Draw the backgrounds and set them to repeating 
        public void Draw(SpriteBatch spriteBatch)
        {
            //store the position of the Camera properties here
            int cameraX = (int)Camera.Position.X;
            int cameraY = (int)Camera.Position.Y;

            //For each object in the backgroundLayers array
            foreach (BackgroundLayer layer in backgroundLayers)
            {
                //have them redraw just off the edge of the screen to give a repeating appearance
                if (layer.Texture != null)
                {
                    int bgRepeatsX = Main.Width / layer.Texture.Width + 1;
                    int bgRepeatsY = Main.Height / layer.Texture.Height + 1;
                    int bgStartX = cameraX / layer.Texture.Width;

                    for (int i = -1; i < bgStartX + bgRepeatsX; i++)
                    {
                        spriteBatch.Draw(layer.Texture, new Vector2(cameraX + layer.OffsetX + i * layer.Texture.Width, cameraY
                            + layer.OffsetY), Color.White);
                    }
                }
            }
            player.Draw(spriteBatch);
        }

    }
}
